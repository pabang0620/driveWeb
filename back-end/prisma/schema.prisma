generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id        Int        @id @default(autoincrement())
  nickname  String     @db.VarChar(255)
  email     String     @unique(map: "email") @db.VarChar(255)
  password  String?    @db.VarChar(255)
  googleId  String?    @unique(map: "googleId") @db.VarChar(255)
  kakaoId   String?    @unique(map: "kakaoId") @db.VarChar(255)
  naverId   String?    @unique(map: "naverId") @db.VarChar(255)
  createdAt DateTime?  @default(now()) @db.Timestamp(0)
  updatedAt DateTime?  @default(now()) @db.Timestamp(0)
  comments  comments[]
  posts     posts[]
}

model boards {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  updatedAt DateTime? @default(now()) @db.Timestamp(0)
  posts     posts[]
}

model comments {
  id        Int       @id @default(autoincrement())
  content   String    @db.Text
  postId    Int
  userId    Int
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  updatedAt DateTime? @default(now()) @db.Timestamp(0)
  posts     posts     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_1")
  users     users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_2")

  @@index([postId], map: "postId")
  @@index([userId], map: "userId")
}

model posts {
  id        Int        @id @default(autoincrement())
  title     String     @db.VarChar(255)
  content   String     @db.Text
  boardId   Int
  userId    Int
  createdAt DateTime?  @default(now()) @db.Timestamp(0)
  updatedAt DateTime?  @default(now()) @db.Timestamp(0)
  viewCount Int?       @default(0)
  likeCount Int?       @default(0)
  comments  comments[]
  boards    boards     @relation(fields: [boardId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "posts_ibfk_1")
  users     users      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "posts_ibfk_2")

  @@index([boardId], map: "boardId")
  @@index([userId], map: "userId")
}
