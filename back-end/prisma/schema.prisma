generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model boards {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  updatedAt DateTime? @default(now()) @db.Timestamp(0)
  posts     posts[]
}

model comments {
  id             Int        @id @default(autoincrement())
  content        String     @db.Text
  postId         Int
  userId         Int
  createdAt      DateTime?  @default(now()) @db.Timestamp(0)
  updatedAt      DateTime?  @default(now()) @db.Timestamp(0)
  parentId       Int?
  comments       comments?  @relation("commentsTocomments", fields: [parentId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ParentComment")
  other_comments comments[] @relation("commentsTocomments")
  posts          posts      @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_1")
  users          users      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_2")

  @@index([parentId], map: "FK_ParentComment")
  @@index([postId], map: "postId")
  @@index([userId], map: "userId")
}

model my_car {
  id                      Int       @id @default(autoincrement())
  user_id                 Int
  vehicle_name            String?   @db.VarChar(255)
  fuel_type               String?   @db.VarChar(255)
  year                    Int?      @db.Year
  mileage                 Int?
  license_plate           String?   @db.VarChar(255)
  first_registration_date DateTime? @db.Date
  insurance_company       String?   @db.VarChar(255)
  insurance_period        DateTime? @db.Date
  insurance_fee           Decimal?  @db.Decimal(15, 2)
  created_at              DateTime? @default(now()) @db.Timestamp(0)
  updated_at              DateTime? @default(now()) @db.Timestamp(0)
  users                   users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "my_car_ibfk_1")

  @@index([user_id], map: "user_id")
}

model posts {
  id        Int        @id @default(autoincrement())
  title     String     @db.VarChar(255)
  content   String     @db.Text
  boardId   Int
  userId    Int
  createdAt DateTime?  @default(now()) @db.Timestamp(0)
  updatedAt DateTime?  @default(now()) @db.Timestamp(0)
  viewCount Int?       @default(0)
  likeCount Int?       @default(0)
  comments  comments[]
  boards    boards     @relation(fields: [boardId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "posts_ibfk_1")
  users     users      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "posts_ibfk_2")

  @@index([boardId], map: "boardId")
  @@index([userId], map: "userId")
}

model user_incomes {
  id                    Int       @id @default(autoincrement())
  user_id               Int
  income_type           String?   @db.VarChar(255)
  start_date            DateTime? @db.Date
  region1               String?   @db.VarChar(255)
  region2               String?   @db.VarChar(255)
  monthly_payment       Decimal?  @db.Decimal(15, 2)
  fuel_allowance        Decimal?  @db.Decimal(15, 2)
  investment            Decimal?  @db.Decimal(15, 2)
  standard_expense_rate Decimal?  @db.Decimal(5, 2)
  created_at            DateTime? @default(now()) @db.Timestamp(0)
  updated_at            DateTime? @default(now()) @db.Timestamp(0)
  users                 users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_incomes_ibfk_1")

  @@index([user_id], map: "user_id")
}

model user_profiles {
  id         Int       @id @default(autoincrement())
  user_id    Int
  name       String?   @db.VarChar(255)
  birth_date DateTime? @db.Date
  phone      String?   @db.VarChar(20)
  email      String?   @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_profiles_ibfk_1")

  @@index([user_id], map: "user_id")
}

model user_vehicles {
  id               Int       @id @default(autoincrement())
  user_id          Int
  taxi_type        String?   @db.VarChar(255)
  franchise_status String?   @db.VarChar(255)
  vehicle_name     String?   @db.VarChar(255)
  year             Int?      @db.Year
  fuel_type        String?   @db.VarChar(255)
  mileage          Int?
  commission_rate  Decimal?  @db.Decimal(5, 2)
  created_at       DateTime? @default(now()) @db.Timestamp(0)
  updated_at       DateTime? @default(now()) @db.Timestamp(0)
  users            users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_vehicles_ibfk_1")

  @@index([user_id], map: "user_id")
}

model users {
  id            Int             @id @default(autoincrement())
  nickname      String          @db.VarChar(255)
  username      String          @unique(map: "email") @db.VarChar(255)
  password      String?         @db.VarChar(255)
  googleId      String?         @unique(map: "googleId") @db.VarChar(255)
  kakaoId       String?         @unique(map: "kakaoId") @db.VarChar(255)
  naverId       String?         @unique(map: "naverId") @db.VarChar(255)
  createdAt     DateTime?       @default(now()) @db.Timestamp(0)
  updatedAt     DateTime?       @default(now()) @db.Timestamp(0)
  jobType       users_jobType   @default(OTHER)
  comments      comments[]
  my_car        my_car[]
  posts         posts[]
  user_incomes  user_incomes[]
  user_profiles user_profiles[]
  user_vehicles user_vehicles[]
}

enum users_jobType {
  TAXI
  DELIVERY
  OTHER
}
