generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model boards {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  updatedAt DateTime? @default(now()) @db.Timestamp(0)
  displayed Boolean?  @default(true)
  posts     posts[]
}

model comments {
  id             Int        @id @default(autoincrement())
  content        String     @db.Text
  postId         Int
  userId         Int
  createdAt      DateTime?  @default(now()) @db.Timestamp(0)
  updatedAt      DateTime?  @default(now()) @db.Timestamp(0)
  parentId       Int?
  comments       comments?  @relation("commentsTocomments", fields: [parentId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ParentComment")
  other_comments comments[] @relation("commentsTocomments")
  posts          posts      @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_1")
  users          users      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_2")

  @@index([parentId], map: "FK_ParentComment")
  @@index([postId], map: "FK_Post")
  @@index([userId], map: "FK_User")
}

model driving_logs {
  id              Int               @id @default(autoincrement())
  userId          Int
  date            String?           @db.VarChar(255)
  memo            String?           @db.Text
  created_at      DateTime?         @default(now()) @db.Timestamp(0)
  updated_at      DateTime?         @default(now()) @db.Timestamp(0)
  users           users             @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "driving_logs_ibfk_1")
  driving_records driving_records[]
  expense_records expense_records[]
  income_records  income_records[]

  @@index([userId], map: "userId")
}

model driving_records {
  id                    Int           @id @default(autoincrement())
  driving_log_id        Int?
  start_time            String?       @db.VarChar(255)
  end_time              String?       @db.VarChar(255)
  working_hours         DateTime?     @db.DateTime(0)
  day_of_week           String?       @db.VarChar(10)
  cumulative_km         Int?
  driving_distance      Int?
  business_distance     Int?
  business_rate         Decimal?      @db.Decimal(5, 2)
  fuel_amount           Decimal?      @db.Decimal(10, 2)
  fuel_efficiency       Decimal?      @db.Decimal(10, 2)
  total_driving_cases   Int?
  created_at            DateTime?     @default(now()) @db.Timestamp(0)
  updated_at            DateTime?     @default(now()) @db.Timestamp(0)
  totalDrivingTime      Float?        @db.Float
  userId                Int?
  total_income          Decimal?      @db.Decimal(10, 2)
  working_hours_seconds Int?
  driving_logs          driving_logs? @relation(fields: [driving_log_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "driving_records_ibfk_1")

  @@index([driving_log_id], map: "driving_log_id")
}

model expense_records {
  id              Int           @id @default(autoincrement())
  driving_log_id  Int?
  fuel_expense    Decimal?      @db.Decimal(15, 2)
  toll_fee        Decimal?      @db.Decimal(15, 2)
  meal_expense    Decimal?      @db.Decimal(15, 2)
  fine_expense    Decimal?      @db.Decimal(15, 2)
  other_expense   Decimal?      @db.Decimal(15, 2)
  expense_spare_1 Decimal?      @db.Decimal(15, 2)
  expense_spare_2 Decimal?      @db.Decimal(15, 2)
  expense_spare_3 Decimal?      @db.Decimal(15, 2)
  expense_spare_4 Decimal?      @db.Decimal(15, 2)
  total_expense   Decimal?      @db.Decimal(15, 2)
  profit_loss     Decimal?      @db.Decimal(15, 2)
  created_at      DateTime?     @default(now()) @db.Timestamp(0)
  updated_at      DateTime?     @default(now()) @db.Timestamp(0)
  card_fee        Float?        @db.Float
  kakao_fee       Float?        @db.Float
  uber_fee        Float?        @db.Float
  userId          Int?
  onda_fee        Decimal?      @db.Decimal(10, 2)
  tada_fee        Decimal?      @db.Decimal(10, 2)
  iam_fee         Decimal?      @db.Decimal(10, 2)
  etc_fee         Decimal?      @db.Decimal(10, 2)
  driving_logs    driving_logs? @relation(fields: [driving_log_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "expense_records_ibfk_1")
  users           users?        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_expense_records_user")

  @@index([driving_log_id], map: "driving_log_id")
  @@index([userId], map: "fk_expense_records_user")
}

model franchise_fees {
  id              Int            @id @default(autoincrement())
  userId          Int?
  franchise_name  String?        @db.VarChar(255)
  fee             Decimal?       @db.Decimal(15, 2)
  created_at      DateTime?      @default(now()) @db.Timestamp(0)
  updated_at      DateTime?      @default(now()) @db.Timestamp(0)
  user_vehicle_id Int?
  user_vehicles   user_vehicles? @relation(fields: [user_vehicle_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_UserVehicle")
  users           users?         @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "franchise_fees_ibfk_1")

  @@index([user_vehicle_id], map: "FK_UserVehicle")
  @@index([userId], map: "userId")
}

model income_records {
  id                     Int           @id @default(autoincrement())
  driving_log_id         Int?
  card_income            Decimal?      @db.Decimal(15, 2)
  cash_income            Decimal?      @db.Decimal(15, 2)
  kakao_income           Decimal?      @db.Decimal(15, 2)
  uber_income            Decimal?      @db.Decimal(15, 2)
  onda_income            Decimal?      @db.Decimal(15, 2)
  tada_income            Decimal?      @db.Decimal(15, 2)
  iam_income             Decimal?      @db.Decimal(15, 2)
  etc_income             Decimal?      @db.Decimal(15, 2)
  other_income           Decimal?      @db.Decimal(15, 2)
  income_spare_1         Decimal?      @db.Decimal(15, 2)
  income_spare_2         Decimal?      @db.Decimal(15, 2)
  income_spare_3         Decimal?      @db.Decimal(15, 2)
  income_spare_4         Decimal?      @db.Decimal(15, 2)
  total_income           Decimal?      @db.Decimal(15, 2)
  income_per_km          Decimal?      @db.Decimal(10, 2)
  income_per_hour        Decimal?      @db.Decimal(10, 2)
  total_transport_income Decimal?      @db.Decimal(15, 2)
  created_at             DateTime?     @default(now()) @db.Timestamp(0)
  updated_at             DateTime?     @default(now()) @db.Timestamp(0)
  totalTransportIncome   Float?        @db.Float
  userId                 Int?
  driving_logs           driving_logs? @relation(fields: [driving_log_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_income_driving_log")
  users                  users?        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_income_records_user")

  @@index([driving_log_id], map: "driving_log_id")
  @@index([userId], map: "fk_income_records_user")
}

model likes {
  id        Int       @id @default(autoincrement())
  userId    Int
  postId    Int
  createdAt DateTime? @default(now()) @db.Timestamp(0)

  @@unique([userId, postId], map: "unique_likes")
}

model maintenance_items {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(255)
  my_carId            Int
  userId              Int?
  unit                String                @default("km") @db.VarChar(15)
  my_car              my_car                @relation(fields: [my_carId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_maintenance_items_my_car")
  users               users?                @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_userId")
  maintenance_records maintenance_records[]

  @@index([my_carId], map: "fk_maintenance_items_my_car")
  @@index([userId], map: "idx_userId")
}

model maintenance_records {
  id                   Int                @id @default(autoincrement())
  userId               Int?
  carId                Int?
  maintenanceItemId    Int?
  maintenanceDate      DateTime?          @db.Date
  createdAt            DateTime?          @default(now()) @db.Timestamp(0)
  updatedAt            DateTime?          @default(now()) @db.Timestamp(0)
  maintenanceMethod    String?            @db.VarChar(255)
  maintenanceInterval  Int?
  maintenanceDistance  Int?
  mileageAtMaintenance Int?
  maintenanceCost      Decimal?           @db.Decimal(10, 2)
  edited               Int?               @default(0)
  users                users?             @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "maintenance_records_ibfk_1")
  my_car               my_car?            @relation(fields: [carId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "maintenance_records_ibfk_2")
  maintenance_items    maintenance_items? @relation(fields: [maintenanceItemId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "maintenance_records_ibfk_3")

  @@index([carId], map: "fk_maintenance_records_carId")
  @@index([maintenanceItemId], map: "fk_maintenance_records_maintenanceItemId")
  @@index([userId], map: "fk_maintenance_records_userId")
}

model my_car {
  id                      Int                   @id @default(autoincrement())
  userId                  Int                   @unique(map: "userId_2")
  vehicle_name            String?               @db.VarChar(255)
  fuel_type               String?               @db.VarChar(255)
  year                    Int?                  @db.Year
  mileage                 Int?
  license_plate           String?               @db.VarChar(255)
  first_registration_date DateTime?             @db.Date
  insurance_company       String?               @db.VarChar(255)
  insurance_period        DateTime?             @db.Date
  insurance_fee           Decimal?              @db.Decimal(15, 2)
  created_at              DateTime?             @default(now()) @db.Timestamp(0)
  updated_at              DateTime?             @default(now()) @db.Timestamp(0)
  insurance_period_start  DateTime?             @db.Date
  insurance_period_end    DateTime?             @db.Date
  imageUrl                String?               @db.VarChar(255)
  maintenance_items       maintenance_items[]
  maintenance_records     maintenance_records[]
  users                   users                 @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "my_car_ibfk_1")

  @@index([userId], map: "userId")
}

model postImages {
  id        Int       @id @default(autoincrement())
  postId    Int
  imageUrl  String    @db.VarChar(255)
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  posts     posts     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "postImages_ibfk_1")

  @@index([postId], map: "postId")
}

model posts {
  id           Int          @id @default(autoincrement())
  title        String       @db.VarChar(255)
  content      String       @db.MediumText
  boardId      Int
  userId       Int
  imageUrl     String?      @db.VarChar(255)
  createdAt    DateTime?    @default(now()) @db.Timestamp(0)
  updatedAt    DateTime?    @default(now()) @db.Timestamp(0)
  viewCount    Int?         @default(0)
  likeCount    Int?         @default(0)
  order_number Int?
  comments     comments[]
  postImages   postImages[]
  boards       boards       @relation(fields: [boardId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "posts_ibfk_1")
  users        users        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "posts_ibfk_2")

  @@index([boardId], map: "FK_Board")
  @@index([userId], map: "userId")
}

model user_incomes {
  id                    Int       @id @default(autoincrement())
  userId                Int       @unique(map: "userId_2")
  income_type           String?   @db.VarChar(255)
  start_date            DateTime? @db.Date
  region1               String?   @db.VarChar(255)
  region2               String?   @db.VarChar(255)
  monthly_payment       Decimal?  @db.Decimal(15, 2)
  fuel_allowance        Decimal?  @db.Decimal(15, 2)
  investment            Decimal?  @db.Decimal(15, 2)
  standard_expense_rate Decimal?  @db.Decimal(5, 2)
  created_at            DateTime? @default(now()) @db.Timestamp(0)
  updated_at            DateTime? @default(now()) @db.Timestamp(0)
  personal_deduction    Decimal?  @default(0.00) @db.Decimal(15, 2)
  estimated_total_tax   Decimal?  @default(0.00) @db.Decimal(15, 2)
  users                 users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_incomes_ibfk_1")

  @@index([userId], map: "userId")
}

model user_profiles {
  id         Int       @id @default(autoincrement())
  userId     Int       @unique(map: "userId_2")
  name       String?   @db.VarChar(255)
  birth_date String?   @db.VarChar(15)
  phone      String?   @db.VarChar(20)
  email      String?   @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  imageUrl   String?   @db.VarChar(255)
  users      users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_profiles_ibfk_1")

  @@index([userId], map: "userId")
}

model user_vehicles {
  id               Int              @id @default(autoincrement())
  userId           Int              @unique(map: "userId")
  carType          String?          @db.VarChar(255)
  franchise_status String?          @db.VarChar(255)
  commission_rate  Decimal?         @db.Decimal(5, 2)
  vehicle_name     String?          @db.VarChar(255)
  year             Int?
  fuel_type        String?          @db.VarChar(255)
  mileage          Int?
  created_at       DateTime?        @default(now()) @db.Timestamp(0)
  updated_at       DateTime?        @default(now()) @db.Timestamp(0)
  franchise_fees   franchise_fees[]
  users            users            @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_user_vehicles_userId")

  @@index([userId], map: "idx_user_vehicles_userId")
}

model users {
  id                  Int                   @id @default(autoincrement())
  nickname            String                @db.VarChar(255)
  username            String                @unique(map: "email") @db.VarChar(255)
  password            String?               @db.VarChar(255)
  googleId            String?               @unique(map: "googleId") @db.VarChar(255)
  kakaoId             String?               @unique(map: "kakaoId") @db.VarChar(255)
  naverId             String?               @unique(map: "naverId") @db.VarChar(255)
  createdAt           DateTime?             @default(now()) @db.Timestamp(0)
  updatedAt           DateTime?             @default(now()) @db.Timestamp(0)
  jobtype             Int?
  userQuestion        String?               @db.VarChar(50)
  userAnswer          String?               @db.VarChar(50)
  status              String                @default("Active") @db.VarChar(30)
  permission          Int                   @default(5)
  comments            comments[]
  driving_logs        driving_logs[]
  expense_records     expense_records[]
  franchise_fees      franchise_fees[]
  income_records      income_records[]
  maintenance_items   maintenance_items[]
  maintenance_records maintenance_records[]
  my_car              my_car?
  posts               posts[]
  premium_payments    premium_payments[]
  user_incomes        user_incomes?
  user_profiles       user_profiles?
  user_vehicles       user_vehicles?
}

model Ranking {
  id            Int     @id @default(autoincrement())
  name          String  @db.VarChar(255)
  show_number   Int?
  filter_number Int?
  api_name      String? @db.VarChar(40)
}

model premium_payments {
  id             Int       @id @default(autoincrement())
  userId         Int
  orderId        String    @db.VarChar(255)
  orderState     Int
  amount         Decimal   @db.Decimal(10, 2)
  paymentDate    DateTime? @default(now()) @db.DateTime(0)
  expirationDate DateTime? @db.DateTime(0)
  users          users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "premium_payments_ibfk_1")

  @@index([userId], map: "userId")
}
